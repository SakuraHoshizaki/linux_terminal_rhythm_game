11.27
落ちものゲームといえば音ゲーやん！と聞いて許可をもらいました

11.28
26キーの(キーボード練習ソフト?)落下式音ゲーに決定しました

GUI禁止なのでダサい盤面を作った

入力をモニタリングしながら進む必要があるから並行処理の方法を調べ、pthreadに決定しました。

キーに応じて判定ラインの挙動をsystem clearで実装、確認できました。

system clearを繰り返すという方法のフレームレートをテスト。5-6フレーム毎秒がギリギリ、7以上ではキラキラで安定に表示できない。音ゲーには無理、他のやり方が必要です。

\033[%d,%dH  というcursorを移動して特定な場所を書き直す神のやり方をネット上に発見しました。

gotoxyをdefine、このやり方で判定ラインを再構築してうまく動作しました

ノーツの落し方と精度の高い時間の測り方について調べ、各ノーツが１つのスレッドか各キーが一つのスレッドかに迷い、最後は各ノーツでスレッドを作り判定終了でキャンセルに決定しました。時間はstruct timeval gettimeofday()でミリ秒まで測定です。

wsl2で音を出す方法をたくさん調べても出てこない

11.29
while(1)でdrop notes threadを書いた結果、たまに出力がおかしくなる。

while1とgotoxyの並行処理でカーサーの位置が暴れたと推測、gotoxyをprintxycをに進化し解決しました。

判定待ちのノーツを格納するQueueとそれを操作する関数を作った。判定はdrop threadでpressed keyをスギャンする方法にしました。

いろんなバグを克服したが、どうしても判定が0.3sぐらいずれてます。dropで受動的にscanするスピードが足りないと推測。

get keyの瞬間に判定関数を実行することに全部再構築しました。

データ構造を調整、ほぼすべてのデータをqueueに格納することにしました。board構造体のデータ量を減らしました。

単独ノーツの判定テストがうまく動くようになりました。

判定ずれは目視できないぐらいうまくなりました!

ランダムにノーツを発生するプログラムを作りました。

大量実装始めます。

↑たくさんのdropスレッドをmallocで初期化するようにしたが、また200ms以上ずれが出てました。ヒープとスタックのスピード差ではないかと思い、スラックで聞いてみました。

↑RYOGO SATOさんに詳しい回答をいただきました。
そんな大きな差がおかしいと知りました。

↑wslからubuntuに変更、なんとうまく行きました。そしてまたwslに戻って、こっちもうまく動作してました。コードが寂しくて出かけたい！ということが分かりました。（多分Windowsが疲れたかもしれない）

printxycからprintxysに進化することで得点と判定を表示するものを実装しました。

ランダムノーツテストを正常に動かした。

11.30
音の部分を作り始めます

無音の環境でもキーボード練習を楽しめるためにランダムノーツゲームを残しました。mainから一つの関数に引っ越して、最初から選べるモードにしました。

linux音出しのテスト、一番汎用性高いpulseaudioに定着しました。

paplay *.wav &>dev/null/&でバックグラウンド実行&エコー破棄

譜面ファイルコンテンツ決定、入出力をテストしました、大失敗です

↑fscanfにファイルネーム引数入れ忘れてもエラー出ないの？？すっごくバグ探した。。。

音声再生ながら譜面入力からノーツ落下機能ができました。

譜面制作ツールを作ります。

12.1

午前の量子力学試験をサボりました。どうせ単位落ちるだろう。
その時間にユーザーの譜面作成ツールを作ります。

元の譜面を再生しながらキーボード入力を受けて譜面に追加するようにします。

↑大体できました。

ソフトウェア2の授業に行きます。

再生の途中から切る方法を探して、共有した構造体にフラッグを入れてうまくいきました。

譜面作成テスト成功。

帰ってpython課題やリます。面倒くさかった。

12.2 
echo-crusherPの譜面を作ります。

ああああむずい

作る時は緊張しちゃう！！！タイミング全然できん！！！

ダメだ。bpmから計算するやつを作ろうか。。。

bpm_chart.c作りました。特定な文字列とbpmで時間譜面に変換します。

echo.txt作成大成功

同時押しのあとにずれ発生。

↑bpm_chartでtime_16を１個少なかった。修正済み。

echoの60秒までの譜面を作りました。ちゃんと動作しました。自分が作ったのにmissばかりだわ。

この音ゲー甘くない!

繰り返し練習すると何回目からずれ発生。音声サービス殺して再起動のせい?

↑音声が始めてからgettimeで解決しました

音ゲーデビュー！echo譜面完成！

音ゲー楽しいけど譜面は大変！！！

12.3 
難易度システムを追加します。

フォルダー構造を改良しましたがバグいっぱい。

↑文字列の一部コピーするとき最後の\0を全部忘れました。

メインゲームでＯＫ。

難易度システムと新しいフォルダー構造をゲームと譜面作成機両方に実装できました。

千本桜の譜面も作りました。

12.7 

どれも難しかったと言われたため、very easyの残酷な天使のテーゼの譜面を追加しました。

